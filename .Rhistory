runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
shiny::runApp()
require(GO.db)
shiny::runApp()
shiny::runApp()
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList","UserGeneList",
"ExprsMatrix","ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"GeneList","Pval","logFC"),
target=c("Exprs","ColData","EnrichObj","logFC","Pval","GeneList",
"GeneList","EnrichObj",
"Exprs","GeneList","EnrichObj",
"ColData",
"GeneList","Pval","logFC","EnrichObj",
"PCA","PCA","Volcano","Volcano","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA","GSEA"),
value=rep(3,48)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
links$group <- "blue"
my_color <- 'd3.scaleOrdinal() .domain(["blue"]) .range(["blue"])'
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE, fontSize = 13, margin=0)
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList","GeneList",
"ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"EnrichObj","Pval","logFC"),
target=c("Exprs","ColData","logFC","Pval","GeneList",
"GeneList","EnrichObj",
"Exprs","GeneList",
"ColData",
"GeneList","Pval","logFC","EnrichObj",
"PCA","PCA","Volcano","Volcano","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA","GSEA"),
value=rep(3,48)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
links$group <- "blue"
my_color <- 'd3.scaleOrdinal() .domain(["blue"]) .range(["blue"])'
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE, fontSize = 13, margin=0)
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE, fontSize = 13, margin=0)
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList","UserGeneList",
"ExprsMatrix","ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"GeneList","Pval","logFC"),
target=c("Exprs","ColData","logFC","Pval","GeneList",
"GeneList","EnrichObj",
"Exprs","GeneList","EnrichObj",
"ColData",
"GeneList","Pval","logFC","EnrichObj",
"PCA","PCA","Volcano","Volcano","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA","GSEA"),
value=rep(3,48)
)
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList","UserGeneList",
"ExprsMatrix","ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"GeneList","Pval","logFC"),
target=c("Exprs","ColData","logFC","Pval","GeneList",
"GeneList","EnrichObj",
"Exprs","GeneList","EnrichObj",
"ColData",
"GeneList","Pval","logFC","EnrichObj",
"PCA","PCA","Volcano","Volcano","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA","GSEA"),
value=rep(3,47)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
links$group <- "blue"
my_color <- 'd3.scaleOrdinal() .domain(["blue"]) .range(["blue"])'
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE, fontSize = 13, margin=0)
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList","UserGeneList",
"ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"GeneList","Pval","logFC"),
target=c("Exprs","ColData","logFC","Pval","GeneList",
"GeneList","EnrichObj",
"Exprs","GeneList",
"ColData",
"GeneList","Pval","logFC","EnrichObj",
"PCA","PCA","Volcano","Volcano","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA","GSEA"),
value=rep(3,46)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
links$group <- "blue"
my_color <- 'd3.scaleOrdinal() .domain(["blue"]) .range(["blue"])'
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE, fontSize = 13, margin=0)
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList","UserGeneList",
"ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"GeneList","Pval","logFC"),
target=c("Exprs","ColData","logFC","Pval","GeneList",
"GeneList","EnrichObj",
"Exprs","GeneList",
"ColData",
"GeneList","Pval","logFC",
"PCA","PCA","Volcano","Volcano","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA","GSEA"),
value=rep(3,45)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
links$group <- "blue"
my_color <- 'd3.scaleOrdinal() .domain(["blue"]) .range(["blue"])'
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE, fontSize = 13, margin=0)
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList",
"ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"GeneList","Pval","logFC"),
target=c("Exprs","ColData","logFC","Pval","GeneList",
"GeneList",
"Exprs","GeneList",
"ColData",
"GeneList","Pval","logFC",
"PCA","PCA","Volcano","Volcano","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA","GSEA"),
value=rep(3,44)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
links$group <- "blue"
my_color <- 'd3.scaleOrdinal() .domain(["blue"]) .range(["blue"])'
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE, fontSize = 13, margin=0)
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList", "GeneList",
"ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"GeneList","Pval","logFC"),
target=c("Exprs","ColData","logFC","Pval","GeneList",
"GeneList", "EnrichObj",
"Exprs","GeneList",
"ColData",
"GeneList","Pval","logFC",
"PCA","PCA","Volcano","Volcano","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA","GSEA"),
value=rep(3,45)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
links$group <- "blue"
my_color <- 'd3.scaleOrdinal() .domain(["blue"]) .range(["blue"])'
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=FALSE, fontSize = 13, margin=0)
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=TRUE, fontSize = 13, margin=0)
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList", "GeneList",
"ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"Pval","logFC"),
target=c("Exprs","ColData","logFC","Pval","GeneList",
"GeneList", "EnrichObj",
"Exprs","GeneList",
"ColData",
"GeneList","Pval","logFC",
"PCA","PCA","Volcano","Volcano","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA"),
value=rep(3,45)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
links$group <- "blue"
my_color <- 'd3.scaleOrdinal() .domain(["blue"]) .range(["blue"])'
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=TRUE, fontSize = 13, margin=0)
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList", "GeneList",
"ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"EnrichObj","Pval","logFC"),
target=c("Exprs","ColData","logFC","Pval","GeneList",
"GeneList", "EnrichObj",
"Exprs","GeneList",
"ColData",
"GeneList","Pval","logFC",
"PCA","PCA","Volcano","Volcano","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA","GSEA"),
value=rep(3,45)
)
# From these flows we need to create a node data frame: it lists every entities involved in the flow
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
# With networkD3, connection must be provided using id, not using real name like in the links dataframe.. So we need to reformat it.
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
links$group <- "blue"
my_color <- 'd3.scaleOrdinal() .domain(["blue"]) .range(["blue"])'
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=TRUE, fontSize = 13, margin=0)
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=TRUE, fontSize = 13, margin=0, iterations = 10)
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=TRUE, fontSize = 13, margin=0, iterations = 100)
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=TRUE, fontSize = 13, margin=0)
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
library(networkD3)
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList", "GeneList",
"ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"EnrichObj","Pval","logFC"),
target=c("Exprs","ColData","logFC","Pval","GeneList",
"GeneList", "EnrichObj",
"Exprs","GeneList",
"ColData",
"GeneList","Pval","logFC",
"PCA","PCA","Volcano","Volcano","MA","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA","GSEA"),
value=rep(3,46)
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList", "GeneList",
"ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"EnrichObj","Pval","logFC"),
target=c("Exprs","ColData","logFC","Pval","GeneList",
"GeneList", "EnrichObj",
"Exprs","GeneList",
"ColData",
"GeneList","Pval","logFC",
"PCA","PCA","Volcano","Volcano","MA","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA","GSEA"),
value=rep(3,46)
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
library(tidyverse)
links <- data.frame(
source=c("DEseq","DEseq","DEseq","DEseq","DEseq",
"UserGeneList", "GeneList",
"ExprsMatrix","ExprsMatrix",
"SampleData",
"GeneList+Pval+logFC","GeneList+Pval+logFC","GeneList+Pval+logFC",
"Exprs","ColData","logFC","Pval","logFC","Pval","Exprs","Exprs","ColData",
"Exprs","ColData","Exprs","ColData","Exprs","ColData","logFC","Pval",
"EnrichObj","EnrichObj","EnrichObj","EnrichObj","EnrichObj",
"EnrichObj","EnrichObj","EnrichObj","Pval","logFC","EnrichObj","Pval","logFC",
"EnrichObj","Pval","logFC"),
target=c("Exprs","ColData","logFC","Pval","GeneList",
"GeneList", "EnrichObj",
"Exprs","GeneList",
"ColData",
"GeneList","Pval","logFC",
"PCA","PCA","Volcano","Volcano","MA","MA","MA","Boxplot/Violin","Boxplot/Violin",
"Heatmap","Heatmap","Cluster","Cluster","TopGene","TopGene","Karyoplot","Karyoplot",
"KeggBarplot","KeggChorplot","KeggDotplot","KeggHeatmap","KeggNetplot",
"GOBar","GODot","GOplotBar","GOplotBar","GOplotBar","GOCircle","GOCircle","GOCircle",
"GSEA","GSEA","GSEA"),
value=rep(3,46)
)
nodes <- data.frame(
name=c(as.character(links$source),
as.character(links$target)) %>% unique()
)
links$IDsource <- match(links$source, nodes$name)-1
links$IDtarget <- match(links$target, nodes$name)-1
links$group <- "blue"
my_color <- 'd3.scaleOrdinal() .domain(["blue"]) .range(["blue"])'
# Make the Network
sankeyNetwork(Links = links, Nodes = nodes,
Source = "IDsource", Target = "IDtarget",
Value = "value", NodeID = "name",
sinksRight=TRUE, fontSize = 13, margin=0)
shiny::runApp()
shiny::runApp()
runApp()
shiny::runApp()
